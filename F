-- // Declarations \\ --
local LocalPlayer = game.Players.LocalPlayer
local Camera = workspace.CurrentCamera
local WorldToViewportPoint = Camera.worldToViewportPoint            -- Does nothing
getgenv().PTR = {}
local HeadOff = Vector3.new(0, 1, 0)                          -- How much it offsets (misplace) it by for this its 0.5 studs above the head
local LegOff = Vector3.new(0, 4.5, 0)                             -- This would offset by 3 studs below the HRP

-- // ESP Toggles \\ --
getgenv().ESP = {
    Boxes = true,
    HealthBar = true,
    ShowHealth = true,
    Name = true,
    DistancefromCharacter = true,
    DistancefromCamera = false,
    VisibleCheck = true,
    TeamCheck = true
}
-- // Helper functions \\ --
function IsplayerVisible(Target)
    local TargetChar = Target.Character
    local LocalChar = LocalPlayer.Character
    if  TargetChar and LocalChar then
        local TargetPart = TargetChar:FindFirstChild('HumanoidRootPart')
        if TargetPart then
            local CastPoints = {LocalChar, TargetChar, TargetPart.Position}
            local ignoreList = {LocalChar, TargetChar}
            local ObscuringPartsArray = Camera:GetPartsObscuringTarget(CastPoints, ignoreList)
            local ObscuringParts = #ObscuringPartsArray
            if ObscuringParts == 0 then
                return true
            elseif ObscuringParts > 0 then
                return false
            end
        end
    end
end

game.Players.PlayerRemoving:connect(function(P)
    local SP = tostring(P)
    table.insert(PTR, SP)
end)

-- // Main ESP function \\ --

for i,v in pairs (game.Players:GetChildren()) do                -- Loops through every player in game one by one
    -- // Drawing \\ --
    local BoxOutline = Drawing.new('Square')                    -- Creates black outline for the Box ESP
    BoxOutline.Visible = false
    BoxOutline.Color = Color3.fromRGB(0,0,0)
    BoxOutline.Thickness = 3
    BoxOutline.Transparency = 1
    BoxOutline.Filled = false
       
    local Box = Drawing.new('Square')                           -- Creates a Red innerBox for the Box ESP
    Box.Visible = false
    Box.Color = Color3.fromRGB(255,0,0)
    Box.Thickness = 1
    Box.Transparency = 1
    Box.Filled = false
           
    local HealthBarOutline = Drawing.new('Square')
    HealthBarOutline.Visible = false
    HealthBarOutline.Color = Color3.fromRGB(0,0,0)
    HealthBarOutline.Thickness = 3.00003
    HealthBarOutline.Transparency = 1
    HealthBarOutline.Filled = false
       
    local HealthBar = Drawing.new('Square')
    HealthBar.Visible = false
    HealthBar.Color = Color3.fromRGB(0,255,0)
    HealthBar.Thickness = 1.00001
    HealthBar.Transparency = 1
    HealthBar.Filled = false
       
    local Name = Drawing.new("Text")
    Name.Visible = false
    Name.Center = true
    Name.Outline = true 
    Name.Font = 0
    Name.Color = Color3.fromRGB(255,255,255)
    Name.Size = 16
   
    local Distance = Drawing.new('Text')
    Distance.Visible = false
    Distance.Center = true
    Distance.Outline = true 
    Distance.Font = 0
    Distance.Color = Color3.fromRGB(255,255,255)
    Distance.Size = 16

    local HealthText = Drawing.new('Text')
    HealthText.Visible = false
    HealthText.Center = true
    HealthText.Outline = true 
    HealthText.Font = 0
    HealthText.Color = Color3.fromRGB(255,255,255)
    HealthText.Size = 16

    -- // Debug Tools (Don't Touch) \\ --
    local QuadBox = Drawing.new('Quad')
    QuadBox.Thickness = 1
    QuadBox.Color = Color3.fromRGB(255,255,255)
    QuadBox.Transparency = 1
    QuadBox.Filled = false
    QuadBox.Visible = false
   
    local NameBox = Drawing.new('Square')
    NameBox.Thickness = 2
    NameBox.Color = Color3.fromRGB(0,0,255)
    NameBox.Transparency = 1
    NameBox.Visible = false
    NameBox.Filled = false

    local HealthBox = Drawing.new('Square')
    HealthBox.Thickness = 1
    HealthBox.Color = Color3.fromRGB(0,0,255)
    HealthBox.Transparency = 1
    HealthBox.Visible = false
    HealthBox.Filled = false
   
    -- // Declarations \\ --
    local Ca1
    local Ca2
    local Ca3
    local R
    local G
    local C1
    local Ha1
    local Ha2
    local Ha3

    -- // ESP Updater \\ --
    function BoxESP()
        C1 = game:GetService('RunService').RenderStepped:Connect(function()                                                  -- Makes it a continuous loop
            if v ~= LocalPlayer then                                                                                           -- Ensures you don't create an ESP on yourself
                local Char = v.Character    
                if Char ~= nil then                                                                                     -- If the Player's Character exists
                    local Humanoid = Char:FindFirstChild('Humanoid')
                    local HRP = Char:FindFirstChild('HumanoidRootPart')
                    if  Humanoid ~= nil and HRP ~= nil and Humanoid.Health > 0 then                                     -- If their Humanoid and HRP exists and they are alive
                               
                        local Vector, OnScreen = Camera:worldToViewportPoint(HRP.Position)                              -- Gets their HRP's position on your screen and OnScreen is a boolean that will return true if theres no errors.
       
                        local Head = Char.Head                                                                          -- Gets the head
                        local RootPos, RootVis = Camera:WorldToViewportPoint(HRP.Position)                       -- Finds the Player's Root position and RootVis is a boolean that returns true if theres no errors (If it  was able to locate the HRP's Position successfully, Means the HRP is visible)
                        local HeadPos = Camera:worldToViewportPoint(Head.Position + HeadOff)                     -- Gets the HeadPos but 0.5 Studs above it
                        local LegPos = Camera:worldToViewportPoint(HRP.Position - LegOff)                        -- Gets the HRP position but 3 studs below it so its under the player's legs but still at the center of the character
       
                        if OnScreen then                                                                                -- If it located the player's HRP position on the screen successfully and its on the client's Screen then
                            if ESP.TeamCheck and v.Team ~= LocalPlayer.Team or not ESP.TeamCheck then                          -- If TeamCheck is on and they're not team mates or if TeamCheck is off then                                                                                    
                                -- // Boxes \\ --
                                if ESP.Boxes == true then   
                                    BoxOutline.Size = Vector2.new(1000 / (RootPos.Z / 2.75), HeadPos.Y - LegPos.Y)                                      -- Makes the width of the BoxOutline depend on the distance between the client and the player???,  and the height of it to be the difference between the HeadPos but 0.5 above it and the HRP Pos but 3 studs below it(Below the legs)                   
                                    BoxOutline.Position = Vector2.new(RootPos.X - BoxOutline.Size.X / 2, RootPos.Y - BoxOutline.Size.Y / 1.8 )          -- Makes the Position of it be slightly behind the player's HRP (character) and the Center of it be the center of the HRP. Done by getting the HRP's Position, going half way down, originally the HRP would appear at the top of the HRP which if used would make the esp appear too high.
                                    BoxOutline.Visible = true                                                                                           -- Makes it Visible
       
                                    Box.Size = Vector2.new(1000 / (RootPos.Z / 2.75), HeadPos.Y - LegPos.Y)                                             -- Same as BoxOutline
                                    Box.Position = Vector2.new(RootPos.X - Box.Size.X / 2, RootPos.Y - Box.Size.Y / 1.8 )                               -- Same as BoxOutline
                                    Box.Visible = true
                                else
                                    BoxOutline.Size = Vector2.new(1000 / (RootPos.Z / 2.75), HeadPos.Y - LegPos.Y)                                      -- Makes the width of the BoxOutline depend on the distance between the client and the player???,  and the height of it to be the difference between the HeadPos but 0.5 above it and the HRP Pos but 3 studs below it(Below the legs)                   
                                    BoxOutline.Position = Vector2.new(RootPos.X - BoxOutline.Size.X / 2, RootPos.Y - BoxOutline.Size.Y / 1.8 )   
                                    BoxOutline.Visible = false
       
                                    Box.Size = Vector2.new(1000 / (RootPos.Z / 2.75), HeadPos.Y - LegPos.Y)                                             -- Same as BoxOutline
                                    Box.Position = Vector2.new(RootPos.X - Box.Size.X / 2, RootPos.Y - Box.Size.Y / 1.8)  
                                    Box.Visible = false                                                                                               -- Same as BoxOutline
                                end
   
                                -- // Boxes Functions \\ --
                                if ESP.VisibleCheck  then
                                    local Visible = IsplayerVisible(v)
                                    if Visible == true then
                                        Box.Color = Color3.fromRGB(0,255,0)
                                    elseif not Visible then
                                        Box.Color = Color3.fromRGB(255,0,0)
                                    end
                                end
                                       
                                -- // Debug Functions (Don't Touch) \\ --
                                QuadBox.PointA = Vector2.new(Box.Position.X + Box.Size.X , Box.Position.Y + Box.Size.Y)
                                QuadBox.PointB = Vector2.new(Box.Position.X, Box.Position.Y + Box.Size.Y)
                                QuadBox.PointC = Vector2.new(Box.Position.X, Box.Position.Y)
                                QuadBox.PointD = Vector2.new(Box.Position.X + Box.Size.X, Box.Position.Y)
                                QuadBox.Visible = false
                                       
                                NameBox.Size = Vector2.new(1000 / (RootPos.Z / 2.75), 1 )
                                NameBox.Position = Vector2.new(QuadBox.PointB.X, QuadBox.PointA.Y -  LegOff.Y * 4.25)
                                NameBox.Visible = false

                        

                                -- // HealthBar \\ --
                                if ESP.HealthBar == true then
                                    HealthBarOutline.Size = Vector2.new( 2 , HeadPos.Y - LegPos.Y)                                                      -- Makes the width of the HeatlthBarOutline stay the same while the height of it will be the same as the box outline
                                    HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0)                                                  -- Makes the HealthBarOutline's Position the left side of the BoxOutline                     
                                    HealthBarOutline.Visible = true                                                                                     -- Makes it visible if on screen
                                            
                                    HealthBar.Size = Vector2.new( 2 , (HeadPos.Y - LegPos.Y ) * (Humanoid.Health / Humanoid.MaxHealth))              -- Makes the width the same as the Outline but as for the height... it is the height of the outline but divided by the amount of health the player has compared to its max health so if a player has a max health of 100 and health of 60 it would be (HeadPos.Y - LegPos.Y ) / 100 / 60, '100 / 60' would become 1.666... and if you divide the height by that, the height would now be only 60% of its original max size, making the HealthBar proportional to the player's health.
                                    local Ha1 = HealthBar.Size.Y - (HeadPos.Y - LegPos.Y )
                                    local Ha2 = Ha1 / 1250
                                    local Ha3 = - Ha2
                                    HealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + Ha3)                      -- Makes the Position the same as the Outline but the Y position is the Box's Y  position + 1/ HealthBar.Size.Y so the HealthBar would appear at the point where the HealthBar still reaches the bottom of the Outline so it appears the bottom is 0hp and top is 100hp.
                                    HealthBar.Visible = true                                                                                         -- Makes it visible if on screen
                  
                                else
                                    HealthBarOutline.Visible = false
                                    HealthBar.Visible = false
                                end

                                -- // HealthBar Debug \\ --
                                HealthBox.Size = Vector2.new(1, 1 )
                                local Ja = Humanoid.Health 
                                if tonumber(Ja) >= 1000 and tonumber(Ja) <= 9999 then
                                    HealthBox.Position = Vector2.new(HealthBar.Position.X - (HealthBarOutline.Size.X * 7.5), HealthBar.Position.Y + (HealthBar.Size.Y - 8))
                                    HealthBox.Visible = false
                                elseif tonumber(Ja) >= 100 and tonumber(Ja) <= 999 then
                                    HealthBox.Position = Vector2.new(HealthBar.Position.X - (HealthBarOutline.Size.X * 6), HealthBar.Position.Y + (HealthBar.Size.Y - 8))
                                    HealthBox.Visible = false
                                elseif tonumber(Ja) <= 99 and tonumber(Ja) >= 10 then
                                    HealthBox.Position = Vector2.new(HealthBar.Position.X - (HealthBarOutline.Size.X * 4.5), HealthBar.Position.Y + (HealthBar.Size.Y - 8))
                                    HealthBox.Visible = false
                                elseif tonumber(Ja) <= 9 then
                                    HealthBox.Position = Vector2.new(HealthBar.Position.X - (HealthBarOutline.Size.X * 3), HealthBar.Position.Y + (HealthBar.Size.Y - 8))
                                    HealthBox.Visible = false
                                end

                                -- // ShowHealth \\ --
                                if ESP.ShowHealth == true then
                                    HealthText.Position = Vector2.new(HealthBox.Position.X + (HealthBox.Size.X / 2), HealthBox.Position.Y)
                                    HealthText.Text = tostring(math.ceil(Humanoid.Health))
                                    HealthText.Visible = true
                                else
                                    HealthText.Visible = false
                                end

                                -- // HealthBar Functions \\ --
       
                                Health = (Humanoid.Health / Humanoid.MaxHealth)
                                     
                                if Health >= 0.5 then
                                    Ca1 = (Health * 510) 
                                    Ca2 = Ca1 - 510
                                    R = - Ca2
                                    HealthBar.Color = Color3.fromRGB(R,255,0)
                                elseif Health < 0.5 and Health > 0 then
                                    Ca3 = (Health * 510) 
                                    G = Ca3
                                    HealthBar.Color = Color3.fromRGB(255,G,0)
                                end
                        
       
                                -- // Name \\ --
                                if ESP.Name == true then
                                    Name.Position = Vector2.new(NameBox.Position.X + (NameBox.Size.X / 1.95), NameBox.Position.Y )                      -- Makes the Name's Position be the RootPos.X to be in the center of character and the RootPos.Y but down by the BoxOutline's Size / 1.75 ( 57% of the BoxOutline's Size) so it appears under the Boxes  
                                    Name.Text = v.Name                                                                                  -- Makes the Name display the player's name
                                    Name.Visible = true                                                                                 -- Makes the name visible
                                else
                                    Name.Visible = false
                                end
   
                                -- // Distance \\ --

                                if ESP.DistancefromCharacter == true and ESP.DistancefromCamera == false then

                                    local CameraPos = Camera.CFrame.Position
                                    Dist =  (HRP.Position - CameraPos).Magnitude

                                    local lHRP = LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
                                    if lHRP and HRP then
                                        Mag = (lHRP.position - HRP.position).Magnitude
                                        Distance.Text = tostring(math.floor(Mag))..'m' 
                                    end

                                    if tonumber(Dist) <= 999 then
                                        Distance.Position = Vector2.new(RootPos.X, RootPos.Y - (Box.Size.Y / 1.75))
                                        Distance.Visible = true
                                    elseif tonumber(Dist) >= 1000 then
                                        Distance.Position = Vector2.new(RootPos.X, RootPos.Y - (Box.Size.Y / 0.85))
                                        Distance.Visible = true
                                    end
                                elseif ESP.DistancefromCharacter == false and ESP.DistancefromCamera == true then

                                    local CameraPos = Camera.CFrame.Position
                                    Dist =  (HRP.Position - CameraPos).Magnitude
                                    Distance.Text = tostring(math.floor(Dist))..'m'

                                    if tonumber(Dist) <= 999 then
                                        Distance.Position = Vector2.new(RootPos.X, RootPos.Y - (Box.Size.Y / 1.75))
                                        Distance.Visible = true
                                    elseif tonumber(Dist) >= 1000 then
                                        Distance.Position = Vector2.new(RootPos.X, RootPos.Y - (Box.Size.Y / 0.85))
                                        Distance.Visible = true
                                    end
                                else
                                    Distance.Visible = false
                                end
                                   
                            elseif ESP.TeamCheck and v.Team == LocalPlayer.Team then                -- If TeamCheck is on and they're a team mate then:
                                BoxOutline.Visible = false                                   -- ESP won't appear nor will health bar or name
                                Box.Visible = false
                                HealthBarOutline.Visible = false   
                                HealthBar.Visible = false 
                                HealthText.Visible = false
                                Name.Visible = false
                                Distance.Visible = false
                            end
                        else
                            BoxOutline.Visible = false                                       -- If its not OnScreen then it will stay invisible
                            Box.Visible = false                                              -- Same as above
                            HealthBarOutline.Visible = false   
                            HealthBar.Visible = false
                            HealthText.Visible = false
                            Name.Visible = false
                            Distance.Visible = false
                        end
                    else
                        BoxOutline.Visible = false                                          -- If the player is dead or has no HRP or Humanoid then the Box ESP stays invisible
                        Box.Visible = false                                                 -- Same as above
                        HealthBarOutline.Visible = false   
                        HealthBar.Visible = false 
                        HealthText.Visible = false
                        Name.Visible = false
                        Distance.Visible = false
                    end
                else
                    BoxOutline.Visible = false
                    Box.Visible = false
                    HealthBarOutline.Visible = false   
                    HealthBar.Visible = false 
                    HealthText.Visible = false
                    Name.Visible = false
                    Distance.Visible = false
                end
            else
                BoxOutline.Visible = false                                                  -- If Player has no character then
                Box.Visible = false                                                         -- Same as above
                HealthBarOutline.Visible = false   
                HealthBar.Visible = false 
                HealthText.Visible = false
                Name.Visible = false
                Distance.Visible = false
            end
        -- // Disconnecter and Remover \\ --
        for i,P in pairs (PTR) do
            local PTR2 = P
            local Client = tostring(v)
            if PTR2 == Client then
                table.remove(PTR, i)
                       
                BoxOutline.Visible = false
                Box.Visible = false
                HealthBarOutline.Visible = false   
                HealthBar.Visible = false 
                HealthText.Visible = false
                Name.Visible = false
                Distance.Visible = false
                QuadBox.Visible = false
                NameBox.Visible = false
                HealthBox.Visible = false
                Box:Remove()
                BoxOutline:Remove()
                HealthBarOutline:Remove()
                HealthBar:Remove()
                HealthText:Remove()
                Name:Remove()
                Distance:Remove()
                QuadBox:Remove()
                NameBox:Remove()
                HealthBox:Remove()
                C1:Disconnect()
                C1 = nil
                print('Removed '..Client)
                end
            end
        end)
    end
    coroutine.wrap(BoxESP)()                                                                       -- Loops it
end

-- // Main ESP function for new players \\ --

game.Players.PlayerAdded:connect(function(v)                                                -- Creates the same exact Box ESP above but for player's that joined after the script's execution
     -- // Drawing \\ --
     local BoxOutline = Drawing.new('Square')                    -- Creates black outline for the Box ESP
     BoxOutline.Visible = false
     BoxOutline.Color = Color3.fromRGB(0,0,0)
     BoxOutline.Thickness = 3
     BoxOutline.Transparency = 1
     BoxOutline.Filled = false
        
     local Box = Drawing.new('Square')                           -- Creates a Red innerBox for the Box ESP
     Box.Visible = false
     Box.Color = Color3.fromRGB(255,0,0)
     Box.Thickness = 1
     Box.Transparency = 1
     Box.Filled = false
            
     local HealthBarOutline = Drawing.new('Square')
     HealthBarOutline.Visible = false
     HealthBarOutline.Color = Color3.fromRGB(0,0,0)
     HealthBarOutline.Thickness = 3.00003
     HealthBarOutline.Transparency = 1
     HealthBarOutline.Filled = false
        
     local HealthBar = Drawing.new('Square')
     HealthBar.Visible = false
     HealthBar.Color = Color3.fromRGB(0,255,0)
     HealthBar.Thickness = 1.00001
     HealthBar.Transparency = 1
     HealthBar.Filled = false
        
     local Name = Drawing.new("Text")
     Name.Visible = false
     Name.Center = true
     Name.Outline = true 
     Name.Font = 0
     Name.Color = Color3.fromRGB(255,255,255)
     Name.Size = 16
    
     local Distance = Drawing.new('Text')
     Distance.Visible = false
     Distance.Center = true
     Distance.Outline = true 
     Distance.Font = 0
     Distance.Color = Color3.fromRGB(255,255,255)
     Distance.Size = 16
 
     local HealthText = Drawing.new('Text')
     HealthText.Visible = false
     HealthText.Center = true
     HealthText.Outline = true 
     HealthText.Font = 0
     HealthText.Color = Color3.fromRGB(255,255,255)
     HealthText.Size = 16
 
     -- // Debug Tools (Don't Touch) \\ --
     local QuadBox = Drawing.new('Quad')
     QuadBox.Thickness = 1
     QuadBox.Color = Color3.fromRGB(255,255,255)
     QuadBox.Transparency = 1
     QuadBox.Filled = false
     QuadBox.Visible = false
    
     local NameBox = Drawing.new('Square')
     NameBox.Thickness = 2
     NameBox.Color = Color3.fromRGB(0,0,255)
     NameBox.Transparency = 1
     NameBox.Visible = false
     NameBox.Filled = false
 
     local HealthBox = Drawing.new('Square')
     HealthBox.Thickness = 1
     HealthBox.Color = Color3.fromRGB(0,0,255)
     HealthBox.Transparency = 1
     HealthBox.Visible = false
     HealthBox.Filled = false
    
     -- // Declarations \\ --
     local Ca1
     local Ca2
     local Ca3
     local R
     local G
     local C1
     local Ha1
     local Ha2
     local Ha3
 
     -- // ESP Updater \\ --
     function BoxESP()
         C1 = game:GetService('RunService').RenderStepped:Connect(function()                                                  -- Makes it a continuous loop
             if v ~= LocalPlayer then                                                                                           -- Ensures you don't create an ESP on yourself
                 local Char = v.Character    
                 if Char ~= nil then                                                                                     -- If the Player's Character exists
                     local Humanoid = Char:FindFirstChild('Humanoid')
                     local HRP = Char:FindFirstChild('HumanoidRootPart')
                     if  Humanoid ~= nil and HRP ~= nil and Humanoid.Health > 0 then                                     -- If their Humanoid and HRP exists and they are alive
                                
                         local Vector, OnScreen = Camera:worldToViewportPoint(HRP.Position)                              -- Gets their HRP's position on your screen and OnScreen is a boolean that will return true if theres no errors.
        
                         local Head = Char.Head                                                                          -- Gets the head
                         local RootPos, RootVis = Camera:WorldToViewportPoint(HRP.Position)                       -- Finds the Player's Root position and RootVis is a boolean that returns true if theres no errors (If it  was able to locate the HRP's Position successfully, Means the HRP is visible)
                         local HeadPos = Camera:worldToViewportPoint(Head.Position + HeadOff)                     -- Gets the HeadPos but 0.5 Studs above it
                         local LegPos = Camera:worldToViewportPoint(HRP.Position - LegOff)                        -- Gets the HRP position but 3 studs below it so its under the player's legs but still at the center of the character
        
                         if OnScreen then                                                                                -- If it located the player's HRP position on the screen successfully and its on the client's Screen then
                             if ESP.TeamCheck and v.Team ~= LocalPlayer.Team or not ESP.TeamCheck then                          -- If TeamCheck is on and they're not team mates or if TeamCheck is off then                                                                                    
                                 -- // Boxes \\ --
                                 if ESP.Boxes == true then   
                                     BoxOutline.Size = Vector2.new(1000 / (RootPos.Z / 2.75), HeadPos.Y - LegPos.Y)                                      -- Makes the width of the BoxOutline depend on the distance between the client and the player???,  and the height of it to be the difference between the HeadPos but 0.5 above it and the HRP Pos but 3 studs below it(Below the legs)                   
                                     BoxOutline.Position = Vector2.new(RootPos.X - BoxOutline.Size.X / 2, RootPos.Y - BoxOutline.Size.Y / 1.8 )          -- Makes the Position of it be slightly behind the player's HRP (character) and the Center of it be the center of the HRP. Done by getting the HRP's Position, going half way down, originally the HRP would appear at the top of the HRP which if used would make the esp appear too high.
                                     BoxOutline.Visible = true                                                                                           -- Makes it Visible
        
                                     Box.Size = Vector2.new(1000 / (RootPos.Z / 2.75), HeadPos.Y - LegPos.Y)                                             -- Same as BoxOutline
                                     Box.Position = Vector2.new(RootPos.X - Box.Size.X / 2, RootPos.Y - Box.Size.Y / 1.8 )                               -- Same as BoxOutline
                                     Box.Visible = true
                                 else
                                     BoxOutline.Size = Vector2.new(1000 / (RootPos.Z / 2.75), HeadPos.Y - LegPos.Y)                                      -- Makes the width of the BoxOutline depend on the distance between the client and the player???,  and the height of it to be the difference between the HeadPos but 0.5 above it and the HRP Pos but 3 studs below it(Below the legs)                   
                                     BoxOutline.Position = Vector2.new(RootPos.X - BoxOutline.Size.X / 2, RootPos.Y - BoxOutline.Size.Y / 1.8 )   
                                     BoxOutline.Visible = false
        
                                     Box.Size = Vector2.new(1000 / (RootPos.Z / 2.75), HeadPos.Y - LegPos.Y)                                             -- Same as BoxOutline
                                     Box.Position = Vector2.new(RootPos.X - Box.Size.X / 2, RootPos.Y - Box.Size.Y / 1.8)  
                                     Box.Visible = false                                                                                               -- Same as BoxOutline
                                 end
    
                                 -- // Boxes Functions \\ --
                                 if ESP.VisibleCheck  then
                                     local Visible = IsplayerVisible(v)
                                     if Visible == true then
                                         Box.Color = Color3.fromRGB(0,255,0)
                                     elseif not Visible then
                                         Box.Color = Color3.fromRGB(255,0,0)
                                     end
                                 end
                                        
                                 -- // Debug Functions (Don't Touch) \\ --
                                 QuadBox.PointA = Vector2.new(Box.Position.X + Box.Size.X , Box.Position.Y + Box.Size.Y)
                                 QuadBox.PointB = Vector2.new(Box.Position.X, Box.Position.Y + Box.Size.Y)
                                 QuadBox.PointC = Vector2.new(Box.Position.X, Box.Position.Y)
                                 QuadBox.PointD = Vector2.new(Box.Position.X + Box.Size.X, Box.Position.Y)
                                 QuadBox.Visible = false
                                        
                                 NameBox.Size = Vector2.new(1000 / (RootPos.Z / 2.75), 1 )
                                 NameBox.Position = Vector2.new(QuadBox.PointB.X, QuadBox.PointA.Y -  LegOff.Y * 4.25)
                                 NameBox.Visible = false
 
                         
 
                                 -- // HealthBar \\ --
                                 if ESP.HealthBar == true then
                                     HealthBarOutline.Size = Vector2.new( 2 , HeadPos.Y - LegPos.Y)                                                      -- Makes the width of the HeatlthBarOutline stay the same while the height of it will be the same as the box outline
                                     HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0)                                                  -- Makes the HealthBarOutline's Position the left side of the BoxOutline                     
                                     HealthBarOutline.Visible = true                                                                                     -- Makes it visible if on screen
                                             
                                     HealthBar.Size = Vector2.new( 2 , (HeadPos.Y - LegPos.Y ) * (Humanoid.Health / Humanoid.MaxHealth))              -- Makes the width the same as the Outline but as for the height... it is the height of the outline but divided by the amount of health the player has compared to its max health so if a player has a max health of 100 and health of 60 it would be (HeadPos.Y - LegPos.Y ) / 100 / 60, '100 / 60' would become 1.666... and if you divide the height by that, the height would now be only 60% of its original max size, making the HealthBar proportional to the player's health.
                                     local Ha1 = HealthBar.Size.Y - (HeadPos.Y - LegPos.Y )
                                     local Ha2 = Ha1 / 1250
                                     local Ha3 = - Ha2
                                     HealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + Ha3)                      -- Makes the Position the same as the Outline but the Y position is the Box's Y  position + 1/ HealthBar.Size.Y so the HealthBar would appear at the point where the HealthBar still reaches the bottom of the Outline so it appears the bottom is 0hp and top is 100hp.
                                     HealthBar.Visible = true                                                                                         -- Makes it visible if on screen
                   
                                 else
                                     HealthBarOutline.Visible = false
                                     HealthBar.Visible = false
                                 end
 
                                 -- // HealthBar Debug \\ --
                                 HealthBox.Size = Vector2.new(1, 1 )
                                 local Ja = Humanoid.Health 
                                 if tonumber(Ja) >= 1000 and tonumber(Ja) <= 9999 then
                                     HealthBox.Position = Vector2.new(HealthBar.Position.X - (HealthBarOutline.Size.X * 7.5), HealthBar.Position.Y + (HealthBar.Size.Y - 8))
                                     HealthBox.Visible = false
                                 elseif tonumber(Ja) >= 100 and tonumber(Ja) <= 999 then
                                     HealthBox.Position = Vector2.new(HealthBar.Position.X - (HealthBarOutline.Size.X * 6), HealthBar.Position.Y + (HealthBar.Size.Y - 8))
                                     HealthBox.Visible = false
                                 elseif tonumber(Ja) <= 99 and tonumber(Ja) >= 10 then
                                     HealthBox.Position = Vector2.new(HealthBar.Position.X - (HealthBarOutline.Size.X * 4.5), HealthBar.Position.Y + (HealthBar.Size.Y - 8))
                                     HealthBox.Visible = false
                                 elseif tonumber(Ja) <= 9 then
                                     HealthBox.Position = Vector2.new(HealthBar.Position.X - (HealthBarOutline.Size.X * 3), HealthBar.Position.Y + (HealthBar.Size.Y - 8))
                                     HealthBox.Visible = false
                                 end
 
                                 -- // ShowHealth \\ --
                                 if ESP.ShowHealth == true then
                                     HealthText.Position = Vector2.new(HealthBox.Position.X + (HealthBox.Size.X / 2), HealthBox.Position.Y)
                                     HealthText.Text = tostring(math.ceil(Humanoid.Health))
                                     HealthText.Visible = true
                                 else
                                     HealthText.Visible = false
                                 end
 
                                 -- // HealthBar Functions \\ --
        
                                 Health = (Humanoid.Health / Humanoid.MaxHealth)
                                      
                                 if Health >= 0.5 then
                                     Ca1 = (Health * 510) 
                                     Ca2 = Ca1 - 510
                                     R = - Ca2
                                     HealthBar.Color = Color3.fromRGB(R,255,0)
                                 elseif Health < 0.5 and Health > 0 then
                                     Ca3 = (Health * 510) 
                                     G = Ca3
                                     HealthBar.Color = Color3.fromRGB(255,G,0)
                                 end
                         
        
                                 -- // Name \\ --
                                 if ESP.Name == true then
                                     Name.Position = Vector2.new(NameBox.Position.X + (NameBox.Size.X / 1.95), NameBox.Position.Y )                      -- Makes the Name's Position be the RootPos.X to be in the center of character and the RootPos.Y but down by the BoxOutline's Size / 1.75 ( 57% of the BoxOutline's Size) so it appears under the Boxes  
                                     Name.Text = v.Name                                                                                  -- Makes the Name display the player's name
                                     Name.Visible = true                                                                                 -- Makes the name visible
                                 else
                                     Name.Visible = false
                                 end
    
                                 -- // Distance \\ --
 
                                 if ESP.DistancefromCharacter == true and ESP.DistancefromCamera == false then
 
                                     local CameraPos = Camera.CFrame.Position
                                     Dist =  (HRP.Position - CameraPos).Magnitude
 
                                     local lHRP = LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
                                     if lHRP and HRP then
                                         Mag = (lHRP.position - HRP.position).Magnitude
                                         Distance.Text = tostring(math.floor(Mag))..'m' 
                                     end
 
                                     if tonumber(Dist) <= 999 then
                                         Distance.Position = Vector2.new(RootPos.X, RootPos.Y - (Box.Size.Y / 1.75))
                                         Distance.Visible = true
                                     elseif tonumber(Dist) >= 1000 then
                                         Distance.Position = Vector2.new(RootPos.X, RootPos.Y - (Box.Size.Y / 0.85))
                                         Distance.Visible = true
                                     end
                                 elseif ESP.DistancefromCharacter == false and ESP.DistancefromCamera == true then
 
                                     local CameraPos = Camera.CFrame.Position
                                     Dist =  (HRP.Position - CameraPos).Magnitude
                                     Distance.Text = tostring(math.floor(Dist))..'m'
 
                                     if tonumber(Dist) <= 999 then
                                         Distance.Position = Vector2.new(RootPos.X, RootPos.Y - (Box.Size.Y / 1.75))
                                         Distance.Visible = true
                                     elseif tonumber(Dist) >= 1000 then
                                         Distance.Position = Vector2.new(RootPos.X, RootPos.Y - (Box.Size.Y / 0.85))
                                         Distance.Visible = true
                                     end
                                 else
                                     Distance.Visible = false
                                 end
                                    
                             elseif ESP.TeamCheck and v.Team == LocalPlayer.Team then                -- If TeamCheck is on and they're a team mate then:
                                 BoxOutline.Visible = false                                   -- ESP won't appear nor will health bar or name
                                 Box.Visible = false
                                 HealthBarOutline.Visible = false   
                                 HealthBar.Visible = false 
                                 HealthText.Visible = false
                                 Name.Visible = false
                                 Distance.Visible = false
                             end
                         else
                             BoxOutline.Visible = false                                       -- If its not OnScreen then it will stay invisible
                             Box.Visible = false                                              -- Same as above
                             HealthBarOutline.Visible = false   
                             HealthBar.Visible = false
                             HealthText.Visible = false
                             Name.Visible = false
                             Distance.Visible = false
                         end
                     else
                         BoxOutline.Visible = false                                          -- If the player is dead or has no HRP or Humanoid then the Box ESP stays invisible
                         Box.Visible = false                                                 -- Same as above
                         HealthBarOutline.Visible = false   
                         HealthBar.Visible = false 
                         HealthText.Visible = false
                         Name.Visible = false
                         Distance.Visible = false
                     end
                 else
                     BoxOutline.Visible = false
                     Box.Visible = false
                     HealthBarOutline.Visible = false   
                     HealthBar.Visible = false 
                     HealthText.Visible = false
                     Name.Visible = false
                     Distance.Visible = false
                 end
             else
                 BoxOutline.Visible = false                                                  -- If Player has no character then
                 Box.Visible = false                                                         -- Same as above
                 HealthBarOutline.Visible = false   
                 HealthBar.Visible = false 
                 HealthText.Visible = false
                 Name.Visible = false
                 Distance.Visible = false
             end
         -- // Disconnecter and Remover \\ --
         for i,P in pairs (PTR) do
             local PTR2 = P
             local Client = tostring(v)
             if PTR2 == Client then
                 table.remove(PTR, i)
                        
                 BoxOutline.Visible = false
                 Box.Visible = false
                 HealthBarOutline.Visible = false   
                 HealthBar.Visible = false 
                 HealthText.Visible = false
                 Name.Visible = false
                 Distance.Visible = false
                 QuadBox.Visible = false
                 NameBox.Visible = false
                 HealthBox.Visible = false
                 Box:Remove()
                 BoxOutline:Remove()
                 HealthBarOutline:Remove()
                 HealthBar:Remove()
                 HealthText:Remove()
                 Name:Remove()
                 Distance:Remove()
                 QuadBox:Remove()
                 NameBox:Remove()
                 HealthBox:Remove()
                 C1:Disconnect()
                 C1 = nil
                 print('Removed '..Client)
                 end
             end
         end)
     end
     coroutine.wrap(BoxESP)()                                                                       -- Loops it
end)
