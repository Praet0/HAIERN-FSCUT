local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local Holding = false
local RenderStepped = RunService.RenderStepped



-- // Visibility Check Function
function IsplayerVisible(Target)
	local TargetChar = Target.Character
	local LocalChar = LocalPlayer.Character
	if  TargetChar and LocalChar then
		local TargetPart = TargetChar:FindFirstChild('HumanoidRootPart')
		if TargetPart then
			local CastPoints = {LocalChar, TargetChar, TargetPart.Position}
			local ignoreList = {LocalChar, TargetChar}
			local ObscuringPartsArray = Camera:GetPartsObscuringTarget(CastPoints, ignoreList)
			local ObscuringParts = #ObscuringPartsArray
			if ObscuringParts == 0 then
				return true
			elseif ObscuringParts > 0 then
				return false
			end
		end
	end
end

local FOVCircle = Drawing.new("Circle")
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
FOVCircle.Radius = getgenv().AimbotFOV.CircleRadius
FOVCircle.Filled = getgenv().AimbotFOV.CircleFilled
FOVCircle.Color = getgenv().AimbotFOV.CircleColor
FOVCircle.Visible = getgenv().AimbotFOV.CircleVisible
FOVCircle.Radius = getgenv().AimbotFOV.CircleRadius
FOVCircle.Transparency = getgenv().AimbotFOV.CircleTransparency
FOVCircle.NumSides = getgenv().AimbotFOV.CircleSides
FOVCircle.Thickness = getgenv().AimbotFOV.CircleThickness

local function GetClosestPlayer()
	local MaximumDistance = getgenv().AimbotFOV.CircleRadius
	local Target = nil

	for _, v in next, Players:GetPlayers() do
		if v.Name ~= LocalPlayer.Name then
			if getgenv().Aimbot.TeamCheck == true then
				if v.Team ~= LocalPlayer.Team then
					if v.Character ~= nil then
						if getgenv().Aimbot.VisibleCheck and IsplayerVisible(v) == true or not getgenv().Aimbot.VisibleCheck  then 
							if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
								if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
									local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
									local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

									if VectorDistance < MaximumDistance then
										Target = v
									end
								end
							end
						end
					end
				end
			else
				if v.Character ~= nil then
					if getgenv().Aimbot.VisibleCheck and IsplayerVisible(v) == true or not getgenv().Aimbot.VisibleCheck  then 
						if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
							if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
								local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
								local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

								if VectorDistance < MaximumDistance then
									Target = v
								end
							end
						end
					end
				end
			end
		end
	end

	return Target
end

UserInputService.InputBegan:Connect(function(Input)
	if Input.UserInputType == getgenv().AimbotKeyBind or Input.KeyCode == getgenv().AimbotKeyBind then
		Holding = true
	end
end)

UserInputService.InputEnded:Connect(function(Input)
	if Input.UserInputType == getgenv().AimbotKeyBind or Input.KeyCode == getgenv().AimbotKeyBind then
		Holding = false
	end
end)

RunService.RenderStepped:Connect(function()
	FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
	FOVCircle.Radius = getgenv().AimbotFOV.CircleRadius
	FOVCircle.Filled = getgenv().AimbotFOV.CircleFilled
	FOVCircle.Color = getgenv().AimbotFOV.CircleColor
	FOVCircle.Visible = getgenv().AimbotFOV.CircleVisible
	FOVCircle.Radius = getgenv().AimbotFOV.CircleRadius
	FOVCircle.Transparency = getgenv().AimbotFOV.CircleTransparency
	FOVCircle.NumSides = getgenv().AimbotFOV.CircleSides
	FOVCircle.Thickness = getgenv().AimbotFOV.CircleThickness

	if Holding == true and getgenv().Aimbot.AimbotEnabled == true then
		TweenService:Create(Camera, TweenInfo.new(getgenv().Aimbot.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character[_G.AimPart].Position)}):Play()
	end
end)
